import { extension } from '@shopify/ui-extensions/admin';
import { ExtensionApiContext } from './context.esnext';
import { remoteRootRender } from '../../utilities/remoteRootRender.esnext';
import { jsx } from 'react/jsx-runtime';

function reactExtension(target, render) {
  // TypeScript can’t infer the type of the callback because it’s a big union
  // type. To get around it, we’ll just fake like we are rendering the
  // Playground extension, since all render extensions have the same general
  // shape (`RenderExtension`).
  return extension(target, async (root, api) => {
    if (!target.match(/\.render$/)) {
      throw new Error(`reactExtension can only be used for .render extension targets, got: ${target}`);
    }
    const element = await render(api);
    return remoteRootRender( /*#__PURE__*/jsx(ExtensionApiContext.Provider, {
      value: api,
      children: element
    }), root);
  });
}

export { reactExtension, reactExtension as render };
