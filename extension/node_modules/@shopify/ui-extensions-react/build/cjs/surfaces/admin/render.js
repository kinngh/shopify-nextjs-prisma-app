'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var admin = require('@shopify/ui-extensions/admin');
var context = require('./context.js');
var remoteRootRender = require('../../utilities/remoteRootRender.js');
var jsxRuntime = require('react/jsx-runtime');

function reactExtension(target, render) {
  // TypeScript can’t infer the type of the callback because it’s a big union
  // type. To get around it, we’ll just fake like we are rendering the
  // Playground extension, since all render extensions have the same general
  // shape (`RenderExtension`).
  return admin.extension(target, async (root, api) => {
    if (!target.match(/\.render$/)) {
      throw new Error(`reactExtension can only be used for .render extension targets, got: ${target}`);
    }
    const element = await render(api);
    return remoteRootRender.remoteRootRender( /*#__PURE__*/jsxRuntime.jsx(context.ExtensionApiContext.Provider, {
      value: api,
      children: element
    }), root);
  });
}

exports.reactExtension = reactExtension;
exports.render = reactExtension;
